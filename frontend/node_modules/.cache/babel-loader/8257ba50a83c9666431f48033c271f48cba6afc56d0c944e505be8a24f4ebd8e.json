{"ast":null,"code":"var _jsxFileName = \"/Users/varazdat.melkonyan/Desktop/LeanFlow/frontend/src/pages/ActivationPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport ActivateAccount from './pages/ActivateAccount';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ActivationPage = () => {\n  _s();\n  const hasActivated = useRef(false);\n  const {\n    token\n  } = useParams();\n  const navigate = useNavigate();\n  const [status, setStatus] = useState('pending');\n  const [errorMsg, setErrorMsg] = useState('');\n  useEffect(() => {\n    const activate = async () => {\n      try {\n        const res = await axios.get(`https://leanflow.onrender.com/api/auth/activate/${token}`);\n        console.log('‚úÖ Activation response:', res.data);\n        if (!hasActivated.current) {\n          setStatus('success');\n          hasActivated.current = true;\n          setTimeout(() => {\n            navigate('/');\n          }, 2000);\n        }\n      } catch (err) {\n        if (!hasActivated.current) {\n          var _err$response, _err$response$data;\n          setStatus('error');\n          setErrorMsg(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Unknown error');\n        }\n      }\n    };\n    activate();\n  }, [token, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center h-screen text-center px-4\",\n    children: [status === 'pending' && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uD83D\\uDD04 Activating your account...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 32\n    }, this), status === 'success' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-green-600 mb-2\",\n        children: \"\\u2705 Account Activated!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You can now login. Redirecting...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), status === 'error' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-red-600 mb-2\",\n        children: \"\\u274C Activation Failed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errorMsg === 'Account already activated' ? 'This account is already active. You can log in.' : 'This link may be expired or already used.'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(ActivationPage, \"lV3YWRQzRB1GtXoIO7GB0pG23Rw=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ActivationPage;\nexport default ActivationPage;\nvar _c;\n$RefreshReg$(_c, \"ActivationPage\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useParams","useNavigate","axios","ActivateAccount","jsxDEV","_jsxDEV","Fragment","_Fragment","ActivationPage","_s","hasActivated","token","navigate","status","setStatus","errorMsg","setErrorMsg","activate","res","get","console","log","data","current","setTimeout","err","_err$response","_err$response$data","response","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/varazdat.melkonyan/Desktop/LeanFlow/frontend/src/pages/ActivationPage.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport ActivateAccount from './pages/ActivateAccount';\n\nconst ActivationPage = () => {\n  const hasActivated = useRef(false);\n  const { token } = useParams();\n  const navigate = useNavigate();\n  const [status, setStatus] = useState('pending'); \n  const [errorMsg, setErrorMsg] = useState('');\n\nuseEffect(() => {\n  const activate = async () => {\n    try {\n      const res = await axios.get(`https://leanflow.onrender.com/api/auth/activate/${token}`);\n      console.log('‚úÖ Activation response:', res.data);\n\n      if (!hasActivated.current) {\n        setStatus('success');\n        hasActivated.current = true;\n\n        setTimeout(() => {\n          navigate('/');\n        }, 2000);\n      }\n    } catch (err) {\n      if (!hasActivated.current) {\n        setStatus('error');\n        setErrorMsg(err.response?.data?.error || 'Unknown error');\n      }\n    }\n  };\n\n  activate();\n}, [token, navigate]);\n\n\n\n  return (\n    <div className=\"flex flex-col items-center justify-center h-screen text-center px-4\">\n      {status === 'pending' && <p>üîÑ Activating your account...</p>}\n      {status === 'success' && (\n        <>\n          <h2 className=\"text-2xl font-bold text-green-600 mb-2\">‚úÖ Account Activated!</h2>\n          <p>You can now login. Redirecting...</p>\n        </>\n      )}\n      {status === 'error' && (\n  <>\n    <h2 className=\"text-2xl font-bold text-red-600 mb-2\">\n      ‚ùå Activation Failed\n    </h2>\n    <p>{errorMsg === 'Account already activated'\n      ? 'This account is already active. You can log in.'\n      : 'This link may be expired or already used.'}\n    </p>\n  </>\n)}\n    </div>\n  );\n};\n\nexport default ActivationPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,eAAe,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,YAAY,GAAGX,MAAM,CAAC,KAAK,CAAC;EAClC,MAAM;IAAEY;EAAM,CAAC,GAAGX,SAAS,CAAC,CAAC;EAC7B,MAAMY,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,SAAS,CAAC;EAC/C,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAMoB,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,mDAAmDR,KAAK,EAAE,CAAC;QACvFS,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEH,GAAG,CAACI,IAAI,CAAC;QAE/C,IAAI,CAACZ,YAAY,CAACa,OAAO,EAAE;UACzBT,SAAS,CAAC,SAAS,CAAC;UACpBJ,YAAY,CAACa,OAAO,GAAG,IAAI;UAE3BC,UAAU,CAAC,MAAM;YACfZ,QAAQ,CAAC,GAAG,CAAC;UACf,CAAC,EAAE,IAAI,CAAC;QACV;MACF,CAAC,CAAC,OAAOa,GAAG,EAAE;QACZ,IAAI,CAACf,YAAY,CAACa,OAAO,EAAE;UAAA,IAAAG,aAAA,EAAAC,kBAAA;UACzBb,SAAS,CAAC,OAAO,CAAC;UAClBE,WAAW,CAAC,EAAAU,aAAA,GAAAD,GAAG,CAACG,QAAQ,cAAAF,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcJ,IAAI,cAAAK,kBAAA,uBAAlBA,kBAAA,CAAoBE,KAAK,KAAI,eAAe,CAAC;QAC3D;MACF;IACF,CAAC;IAEDZ,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,CAACN,KAAK,EAAEC,QAAQ,CAAC,CAAC;EAInB,oBACEP,OAAA;IAAKyB,SAAS,EAAC,qEAAqE;IAAAC,QAAA,GACjFlB,MAAM,KAAK,SAAS,iBAAIR,OAAA;MAAA0B,QAAA,EAAG;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAC5DtB,MAAM,KAAK,SAAS,iBACnBR,OAAA,CAAAE,SAAA;MAAAwB,QAAA,gBACE1B,OAAA;QAAIyB,SAAS,EAAC,wCAAwC;QAAAC,QAAA,EAAC;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChF9B,OAAA;QAAA0B,QAAA,EAAG;MAAiC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA,eACxC,CACH,EACAtB,MAAM,KAAK,OAAO,iBACvBR,OAAA,CAAAE,SAAA;MAAAwB,QAAA,gBACE1B,OAAA;QAAIyB,SAAS,EAAC,sCAAsC;QAAAC,QAAA,EAAC;MAErD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACL9B,OAAA;QAAA0B,QAAA,EAAIhB,QAAQ,KAAK,2BAA2B,GACxC,iDAAiD,GACjD;MAA2C;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC;IAAA,eACJ,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAxDID,cAAc;EAAA,QAEAR,SAAS,EACVC,WAAW;AAAA;AAAAmC,EAAA,GAHxB5B,cAAc;AA0DpB,eAAeA,cAAc;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}